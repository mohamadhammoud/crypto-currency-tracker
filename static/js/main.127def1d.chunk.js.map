{"version":3,"sources":["Redux/actions.ts/actions.ts","apis/crypto-currency-api.ts","Redux/actionTypes/actionTypes.ts","components/CryptoCurrenciesTable.tsx","components/Header.tsx","components/ViewChart.tsx","App.tsx","Redux/store.ts","public/i18next.ts","index.tsx"],"names":["CryptoCurrencuEnum","crypto","axios","create","baseURL","getAllCoins","a","get","response","data","getChartOf7Days","coinId","currency","numberOfDays","getDescription","CryptoCurrenciesTable","props","t","useTranslation","dispatch","useDispatch","history","useHistory","columns","title","dataIndex","key","align","width","render","value","record","type","shape","onClick","switch","kind","style","color","sorter","b","market_cap_rank","row","justify","xs","span","image","src","alt","className","symbol","toUpperCase","offset","ADD_CRYPTOCURRENCY","payload","push","icon","SignalFilled","translate","undefined","name","toFixed","toLocaleString","current_price","CaretDownFilled","CaretUpFilled","price_change_percentage_24h","InfoCircleFilled","market_cap","total_volume","circulating_supply","onChange","e","searchMethod","target","borderRadius","scroll","x","dataSource","cryptoCurrencies","bordered","pagination","pageSize","rowKey","id","Header","i18n","Option","Select","OptGroup","md","countOfCryptoCurrencies","sumOfMarketCap","sumOf24hVol","flex","defaultValue","language","lang","changeLanguage","ViewChart","connect","state","useState","labels","setLabels","setData","desc","setDesc","sendingChartRequest","error","chartData","y","prices","map","price","splitDate","Date","toUTCString","split","Number","description","en","useEffect","config","datasets","label","fill","backgroundColor","borderColor","pointStyle","xl","options","scales","beginAtZero","fontSize","paddingTop","price_change_24h","high_24h","low_24h","market_cap_change_percentage_24h","height","dangerouslySetInnerHTML","__html","App","setCryptoCurrencies","searchedCryptoCurrencies","setSearchedCryptoCurrencies","initialValue","window","localStorage","getItem","JSON","parse","getLocalStorage","favoriteCryptoCurrencies","setFavoriteCryptoCurrencies","setItem","stringify","setLocalStorage","favoriteSearchedCryptoCurrencies","setSearchedFavoriteCryptoCurrencies","setCountOfCryptoCurrencies","setSumOfMarketCap","setSumOf24hVol","switching","find","c","filter","length","sendingRequest","currenciesData","sumOf","prop","array","reduce","accumulator","setInterval","path","exact","toLowerCase","includes","initialState","fully_diluted_valuation","market_cap_change_24h","total_supply","max_supply","ath","ath_change_percentage","ath_date","atl","atl_change_percentage","atl_date","last_updated","use","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","resources","translation","englishlanguage","fr","frenshlanguage","store","createStore","action","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.127def1d.chunk.js","sourcesContent":["\r\nexport interface ICrypto {\r\n    id: string,\r\n    symbol: string,\r\n    name: string,\r\n    image: string,\r\n    current_price: number,\r\n    market_cap: number,\r\n    market_cap_rank: number,\r\n    fully_diluted_valuation: number,\r\n    total_volume: number,\r\n    high_24h: number,\r\n    low_24h: number,\r\n    price_change_24h: number,\r\n    price_change_percentage_24h: number,\r\n    market_cap_change_24h: number,\r\n    market_cap_change_percentage_24h: number,\r\n    circulating_supply: number,\r\n    total_supply: number,\r\n    max_supply: number,\r\n    ath: number,\r\n    ath_change_percentage: number,\r\n    ath_date: string,\r\n    atl: number,\r\n    atl_change_percentage: number,\r\n    atl_date: string,\r\n    roi?: any,\r\n    last_updated: string\r\n}\r\n\r\nexport enum CryptoCurrencuEnum {\r\n    ADD_CRYPTOCURRENCY = \"ADD_CRYPTOCURRENCY\"\r\n}\r\n\r\nexport interface IAddCryptoAction {\r\n    type: CryptoCurrencuEnum.ADD_CRYPTOCURRENCY,\r\n    payload: ICrypto\r\n}\r\n\r\n\r\nexport type CryptoActions = IAddCryptoAction;","import axios from \"axios\";\r\n\r\nexport const crypto = axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3'\r\n});\r\n\r\nexport const getAllCoins = async () => {\r\n    try {\r\n        const response = await crypto.get('/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false');\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\n\r\nexport const getChartOf7Days = async (coinId: string, currency: string, numberOfDays: number) => {\r\n    try {\r\n        const response = await crypto.get(`/coins/${coinId}/market_chart?vs_currency=${currency}&days=${numberOfDays}`);\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\n\r\nexport const getDescription = async (coinId: string) => {\r\n    try {\r\n        const response = await crypto.get(`/coins/${coinId}?localization=true`);\r\n        return [null, response.data];\r\n    } catch (error) {\r\n        return [error, null];\r\n    }\r\n}\r\n\r\n","import { CryptoCurrencuEnum, IAddCryptoAction, ICrypto } from \"../actions.ts/actions\"\r\n\r\n\r\nexport const addCryptoCurrency = (currency: ICrypto): IAddCryptoAction => {\r\n    return {\r\n        type: CryptoCurrencuEnum.ADD_CRYPTOCURRENCY,\r\n        payload: currency\r\n    }\r\n}","import { Input, Table, Tooltip, Button, Row, Col } from 'antd';\r\nimport React from 'react'\r\nimport { CaretDownFilled, CaretUpFilled, InfoCircleFilled, SignalFilled, StarOutlined } from \"@ant-design/icons\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addCryptoCurrency } from '../Redux/actionTypes/actionTypes';\r\nimport { useTranslation } from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\n\r\ninterface IProps {\r\n    title: string;\r\n    cryptoCurrencies: any;\r\n    className: string;\r\n    kind: string;\r\n    switch: (record: any) => void;\r\n    searchMethod: (value: string) => void\r\n}\r\n\r\nconst CryptoCurrenciesTable = (props: IProps) => {\r\n\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const columns = [\r\n        {\r\n            title: '',\r\n            dataIndex: 'switch',\r\n            key: 'switch',\r\n            align: 'center',\r\n            width: 50,\r\n            render: (value: any, record: any) =>\r\n                <Button type=\"primary\"\r\n                    shape=\"round\"\r\n                    onClick={() => props.switch(record)}>\r\n                    {props.kind === \"normal\" ? <> {t(\"Switch to/from favorite list\")} </> : <> {t(\"Delete\")} </>}\r\n                </Button>,\r\n\r\n        },\r\n        {\r\n            title: '#',\r\n            dataIndex: 'market_cap_rank',\r\n            key: 'market_cap_rank',\r\n            align: 'center',\r\n            render: (value: any, record: any) =>\r\n                <span style={{ color: \"#58667e\" }}> {value}</span>,\r\n            sorter: (a: any, b: any) => a.market_cap_rank - b.market_cap_rank,\r\n        },\r\n        {\r\n            title: `${t(\"Name\")}`,\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: (value: number, row: any) => <>\r\n                <Row justify=\"start\" style={{ width: 400 }}>\r\n                    <Col xs={{ span: 12 }}>\r\n                        {\r\n                            row.image ?\r\n                                <> <img src={row.image} alt=\"image\" className=\"img-table-crypto-currency\" /> &nbsp;</>\r\n                                : <span></span>\r\n                        }\r\n                        {value}\r\n                    </Col>\r\n                    <Col xs={{ span: 4 }}>\r\n                        <span style={{ color: \"rgb(128, 138, 157)\" }}>\r\n                            {row.symbol.toUpperCase()}\r\n                        </span>\r\n                    </Col>\r\n                    <Col xs={{ offset: 2, span: 4 }}>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            shape=\"round\"\r\n                            //   style={{ paddingle: 0 }}\r\n                            onClick={() => {\r\n                                dispatch(addCryptoCurrency(row));\r\n                                history.push('/chart');\r\n                            }}\r\n                            icon={<SignalFilled translate={undefined} />}>\r\n                            {t(\"Go to Chart\")}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </>,\r\n            sorter: (a: any, b: any) => a.name - b.name,\r\n        },\r\n        {\r\n            title: `${t(\"Price\")}`,\r\n            dataIndex: 'current_price',\r\n            key: 'current_price',\r\n            align: 'center',\r\n            render: (value: number, row: any) => <> $ {value.toFixed(2).toLocaleString()}</>,\r\n            sorter: (a: any, b: any) => a.current_price - b.current_price,\r\n        },\r\n        {\r\n            title: '24 %',\r\n            dataIndex: 'price_change_percentage_24h',\r\n            key: 'price_change_percentage_24h',\r\n            width: 120,\r\n            align: 'center',\r\n            // #ea3943\r\n            //   #16c784\r\n            render: (value: number, row: any) =>\r\n                <>\r\n                    {value < 0 ? <span style={{ color: \"#ea3943\" }}><CaretDownFilled translate={undefined} />{value.toFixed(2).toLocaleString()}%</span> :\r\n                        <span style={{ color: \"#16c784\" }}><CaretUpFilled translate={undefined} /> {value.toFixed(2).toLocaleString()}%</span>\r\n                    }  </>,\r\n            sorter: (a: any, b: any) => a.price_change_percentage_24h - b.price_change_percentage_24h,\r\n        },\r\n        {\r\n            title: <span>{t(\"Market Cap\")} &nbsp;\r\n                <Tooltip\r\n                    title={t(`The total market value of a cryptocurrency's circulating supply. It is analogous to the free-float capitalization in the stock market. Market Cap = Current Price x Circulating Supply.`)}\r\n                >\r\n                    <InfoCircleFilled translate={undefined} />\r\n                </Tooltip></span>,\r\n            dataIndex: 'market_cap',\r\n            key: 'market_cap',\r\n            align: 'center',\r\n            render: (value: number, row: any) => <> $ {value}</>,\r\n            sorter: (a: any, b: any) => a.market_cap - b.market_cap,\r\n        },\r\n        {\r\n            title: <span>{t(\"Volume(24h)\")} &nbsp;\r\n                <Tooltip\r\n                    title={t(`A measure of how much of a cryptocurrency was traded in the last 24 hours.`)}\r\n                >\r\n                    <InfoCircleFilled translate={undefined} />\r\n                </Tooltip></span>,\r\n            dataIndex: 'total_volume',\r\n            key: 'total_volume',\r\n            align: 'center',\r\n            render: (value: number, row: any) => <> $ {value}</>,\r\n            sorter: (a: any, b: any) => a.total_volume - b.total_volume,\r\n        },\r\n        {\r\n            title: <span>{t(\"Circulating Supply\")} &nbsp;\r\n                <Tooltip\r\n                    title={t(`The amount of coins that are circulating in the market and are in public hands. It is analogous to the flowing shares in the stock market.`)}\r\n                >\r\n                    <InfoCircleFilled translate={undefined} />\r\n                </Tooltip></span>,\r\n            dataIndex: 'circulating_supply',\r\n            key: 'circulating_supply',\r\n            align: 'center',\r\n            render: (value: number, row: any) => <> $ {value}</>,\r\n            sorter: (a: any, b: any) => a.circulating_supply - b.circulating_supply,\r\n        },\r\n    ] as any;\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={props.className}>\r\n                <div className=\"margin-top-10 margin-bottom-10\">\r\n                    <span className='header-label'> {props.title} :</span> &nbsp;\r\n                    <Input onChange={(e: any) => {\r\n                        props.searchMethod(e.target.value);\r\n                    }} style={{ width: 250, borderRadius: 30 }} />\r\n                </div>\r\n                <Table\r\n                    scroll={{ x: 1600 }}\r\n                    dataSource={props.cryptoCurrencies}\r\n                    columns={columns}\r\n                    bordered={true}\r\n                    pagination={{ pageSize: 8 }}\r\n                    rowKey={(x: any) => x.id}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CryptoCurrenciesTable\r\n","import { Col, Row, Select } from 'antd'\r\nimport React from 'react'\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\ninterface IProps {\r\n    countOfCryptoCurrencies: number;\r\n    sumOfMarketCap: number;\r\n    sumOf24hVol: number;\r\n}\r\n\r\nconst Header = (props: IProps) => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const changeLanguageHandler = (lang: string) => {\r\n        i18n.changeLanguage(lang);\r\n    }\r\n\r\n    const { Option, OptGroup } = Select;\r\n\r\n    return (\r\n        <Row justify='start' className='font-size-15 background-color-gray padding-10 margin-20 box-shadow center'>\r\n            <Col md={{ span: 4 }} xs={{ span: 24 }}> <span className='header-label'> {t(\"Cryptos\")} </span> : <span className='color-blue'> ${props.countOfCryptoCurrencies.toLocaleString(\"en-US\")} </span> </Col>\r\n            <Col md={{ span: 6 }} xs={{ span: 24 }}> <span className='header-label'> {t(\"Market Cap\")} </span> : <span className='color-blue'> ${props.sumOfMarketCap.toLocaleString(\"en-US\")} </span></Col>\r\n            <Col md={{ span: 6 }} xs={{ span: 24 }}> <span className='header-label'> {t(\"24h Vol\")}</span> : <span className='color-blue'> ${props.sumOf24hVol.toLocaleString(\"en-US\")} </span></Col>\r\n            <Col flex='auto' md={{ offset: 3, span: 4 }} xs={{ span: 24 }}>\r\n                <Select bordered={false}\r\n                    className='header-selection'\r\n                    style={{ width: 150 }}\r\n                    defaultValue={i18n.language}\r\n                    onChange={(value: string) => { changeLanguageHandler(value) }}>\r\n                    <Option value=\"en\"> {t(\"English\")} </Option>\r\n                    <Option value=\"fr\"> {t(\"French\")} </Option>\r\n                </Select>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router';\r\nimport { getChartOf7Days, getDescription } from '../apis/crypto-currency-api';\r\nimport { ICrypto } from '../Redux/actions.ts/actions';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Button, Col, Row } from 'antd';\r\nimport { CaretDownFilled, CaretUpFilled } from '@ant-design/icons';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface IProps {\r\n    currency: ICrypto;\r\n}\r\n\r\nconst ViewChart_ = ({ currency }: IProps) => {\r\n\r\n    const { t } = useTranslation();\r\n    const [labels, setLabels] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const sendingChartRequest = async () => {\r\n        if (currency.name === \"\") {\r\n            history.push('/');\r\n            return;\r\n        }\r\n        const [error, chartData] = await getChartOf7Days(currency.id, \"usd\", 7);\r\n        if (!error) {\r\n            let x: any = [];\r\n            let y: any = [];\r\n            chartData.prices.map((price: any) => {\r\n                const splitDate = new Date(price[0]).toUTCString().split(\" \");\r\n                x.push(`${splitDate[1]}`);\r\n                y.push(Number(price[1]).toFixed(0));\r\n            });\r\n            setLabels((labels) => x);\r\n            setData((data) => y)\r\n        }\r\n        //notification.error()\r\n    }\r\n\r\n    const description = async (id: string) => {\r\n        if (id !== \"\") {\r\n            const [error, response] = await getDescription(id);\r\n            if (!error) {\r\n                if (response.description.en) {\r\n                    setDesc(response.description.en)\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        sendingChartRequest();\r\n        description(currency.id);\r\n    }, []);\r\n\r\n    const config: any = {\r\n        labels: [...labels],\r\n        datasets: [\r\n            {\r\n                label: `${currency.name} ${t(\"Currency Chart\")}`,\r\n                data: [...data],\r\n                fill: true,\r\n                backgroundColor: \"rgba(75,192,192,0.5)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                pointStyle: \"line\",\r\n\r\n            },\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        //   maintainAspectRatio: false,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            }\r\n\r\n        },\r\n    };\r\n    return <>\r\n        <Row justify=\"center\">\r\n            <Col\r\n                xl={{ span: 16 }}\r\n                xs={{ span: 22 }}\r\n                className=\"font-size-15 background-color-gray margin-20 box-shadow\"\r\n                style={{ width: 400 }}\r\n            >\r\n                <Line\r\n                    translate={undefined}\r\n                    data={config}\r\n                    options={options}\r\n                />\r\n            </Col>\r\n            <Col\r\n                xl={{ span: 6 }}\r\n                xs={{ span: 22 }}\r\n\r\n            >\r\n                <div className=\"font-size-15 background-color-gray padding-10 margin-20 box-shadow\">\r\n\r\n                    <Row style={{ color: \"#58667e\", fontSize: 24 }}>\r\n                        {currency.name} {t(\"Price Statistics\")}\r\n                    </Row>\r\n                    <Row style={{ color: \"#58667e\", fontSize: 14 }} className=\"bordered padding-10\">\r\n                        {t(\"Bitcoin Price Today\")}\r\n                    </Row>\r\n\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={12} style={{ color: \"#58667e\", fontSize: 14 }} >\r\n                            <div style={{ paddingTop: 10 }}>\r\n                                {t(\"Price Change 24h\")}\r\n                            </div>\r\n\r\n                        </Col>\r\n                        <Col span={12} className=\"right\">\r\n                            <div>\r\n                                $ {currency.price_change_24h} <br />\r\n                                {currency.price_change_percentage_24h < 0 ? <span style={{ color: \"#ea3943\" }}><CaretDownFilled translate={undefined} />{currency.price_change_percentage_24h.toFixed(2).toLocaleString()}%</span> :\r\n                                    <span style={{ color: \"#16c784\" }}><CaretUpFilled translate={undefined} /> {currency.price_change_percentage_24h.toFixed(2).toLocaleString()}%</span>}\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={12} style={{ color: \"#58667e\", fontSize: 14 }} >\r\n                            <div>\r\n                                {t(\"24h Low / 24h High\")}\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12} className=\"right\">\r\n                            <div>\r\n                                {currency.high_24h.toFixed(2).toLocaleString()} / {currency.low_24h.toFixed(2).toLocaleString()}\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={12} style={{ color: \"#58667e\", fontSize: 14 }}>\r\n                            <div>\r\n                                {t(\"Market Rank\")}\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12} className=\"right\">\r\n                            <div>\r\n                                #{currency.market_cap_rank}\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={12} style={{ color: \"#58667e\", fontSize: 14 }}>\r\n                            <div style={{ paddingTop: 10 }}>\r\n                                {t(\"Market Cap\")}\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12} className=\"right\">\r\n\r\n                            $ {currency.market_cap.toFixed(2).toLocaleString()}\r\n                            <br />\r\n                            <div>\r\n                                {currency.market_cap_change_percentage_24h < 0 ? <span style={{ color: \"#ea3943\" }}><CaretDownFilled translate={undefined} />{currency.market_cap_change_percentage_24h.toFixed(2).toLocaleString()}%</span> :\r\n                                    <span style={{ color: \"#16c784\" }}><CaretUpFilled translate={undefined} /> {currency.market_cap_change_percentage_24h.toFixed(2).toLocaleString()}%</span>}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"font-size-15 background-color-gray padding-10 margin-20 box-shadow\">\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={12}>\r\n                            <img src={currency.image} height={24} width={24} alt=\"\" /> &nbsp;\r\n                            {currency.name} ({currency.symbol})\r\n                        </Col>\r\n                        <Col span={12} >\r\n                            <div className=\"right\">\r\n                                {currency.market_cap_rank}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"bordered padding-10\">\r\n                        <Col span={16}>\r\n                            <img src={`https://s2.coinmarketcap.com/static/cloud/img/fiat-flags/USD.svg`} height={24} width={24} alt=\"\" /> &nbsp;\r\n                            {t(\"USD (United States)\")}\r\n                        </Col>\r\n                        <Col span={8} >\r\n                            <div className=\"right\">\r\n                                {currency.current_price}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"font-size-15 background-color-gray padding-10 margin-20 box-shadow\">\r\n                    <Row className=\"bordered padding-10\">\r\n\r\n                        <Button type=\"primary\"\r\n                            shape=\"round\"\r\n                            onClick={() => history.push('/')}\r\n                            style={{ width: \"100%\", backgroundColor: \"rgba(75,192,192,0.9)\" }}\r\n                        >\r\n                            {t(\"Go Back\")}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row\r\n            className=\"font-size-15 background-color-gray padding-10 margin-20 box-shadow\"\r\n        >\r\n            <div dangerouslySetInnerHTML={{ __html: desc }} />\r\n\r\n        </Row>\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state: ICrypto) => {\r\n\r\n    return {\r\n        currency: {\r\n            ...state\r\n        }\r\n    }\r\n}\r\nconst ViewChart = connect(mapStateToProps)(ViewChart_)\r\nexport default ViewChart\r\n\r\n\r\n// import {Pie, Doughnut} from 'react-chartjs-2';\r\n\r\n// const state = {\r\n//   labels: ['January', 'February', 'March',\r\n//            'April', 'May'],\r\n//   datasets: [\r\n//     {\r\n//       label: 'Rainfall',\r\n//       backgroundColor: [\r\n//         '#B21F00',\r\n//         '#C9DE00',\r\n//         '#2FDE00',\r\n//         '#00A6B4',\r\n//         '#6800B4'\r\n//       ],\r\n//       hoverBackgroundColor: [\r\n//       '#501800',\r\n//       '#4B5000',\r\n//       '#175000',\r\n//       '#003350',\r\n//       '#35014F'\r\n//       ],\r\n//       data: [65, 59, 80, 81, 56]\r\n//     }\r\n//   ]\r\n// }\r\n\r\n// export default class App extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Pie\r\n//           data={state}\r\n//           options={{\r\n//             title:{\r\n//               display:true,\r\n//               text:'Average Rainfall per month',\r\n//               fontSize:20\r\n//             },\r\n//             legend:{\r\n//               display:true,\r\n//               position:'right'\r\n//             }\r\n//           }}\r\n//         />\r\n\r\n//         <Doughnut\r\n//           data={state}\r\n//           options={{\r\n//             title:{\r\n//               display:true,\r\n//               text:'Average Rainfall per month',\r\n//               fontSize:20\r\n//             },\r\n//             legend:{\r\n//               display:true,\r\n//               position:'right'\r\n//             }\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }","import { notification } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { getAllCoins } from \"./apis/crypto-currency-api\";\nimport CryptoCurrenciesTable from \"./components/CryptoCurrenciesTable\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ViewChart from \"./components/ViewChart\";\nimport { useTranslation } from \"react-i18next\";\n\nconst App: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [cryptoCurrencies, setCryptoCurrencies] = useState([]);\n  const [searchedCryptoCurrencies, setSearchedCryptoCurrencies] = useState([]);\n\n\n\n  function setLocalStorage(key: any, value: any) {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (e) {\n\n    }\n  }\n\n  function getLocalStorage(key: any, initialValue: any) {\n    try {\n      const value = window.localStorage.getItem(key);\n      return value ? JSON.parse(value) : initialValue;\n    } catch (e) {\n      // if error, return initial value\n      return initialValue;\n    }\n  }\n\n  const [favoriteCryptoCurrencies, setFavoriteCryptoCurrencies] = useState(() => getLocalStorage(\"favorites\", []));\n\n  useEffect(() => {\n    setLocalStorage(\"favorites\", favoriteCryptoCurrencies);\n  }, [favoriteCryptoCurrencies]);\n\n\n  const [favoriteSearchedCryptoCurrencies, setSearchedFavoriteCryptoCurrencies] = useState([]);\n\n  const [countOfCryptoCurrencies, setCountOfCryptoCurrencies] = useState(0);\n  const [sumOfMarketCap, setSumOfMarketCap] = useState(0);\n  const [sumOf24hVol, setSumOf24hVol] = useState(0);\n\n  const searchingForNormalCryptoCurrencies = (value: string) => {\n    if (cryptoCurrencies.length > 0) {\n      const x = cryptoCurrencies.filter((currency: any) => {\n        return currency.name.toLowerCase().includes(value.toLowerCase());\n      });\n      setSearchedCryptoCurrencies(x);\n    }\n  }\n\n\n  const searchingForFavoriteCryptoCurrencies = (value: string) => {\n    if (favoriteCryptoCurrencies.length > 0) {\n      const x = favoriteCryptoCurrencies.filter((currency: any) => {\n        return currency.name.toLowerCase().includes(value.toLowerCase());\n      });\n      setSearchedFavoriteCryptoCurrencies(x);\n    }\n  }\n\n  const switching = (record: any) => {\n    if (record) {\n      const find = favoriteCryptoCurrencies.find(((currency: any) => currency.name === record.name));\n\n      if (!find) {\n        setFavoriteCryptoCurrencies((c: any) => {\n\n          return [...favoriteCryptoCurrencies, record] as any\n        });\n        return\n      }\n      let x = favoriteCryptoCurrencies.filter((currency: any) => {\n        return currency.name !== record.name\n      });\n      setFavoriteCryptoCurrencies((c: any) => {\n        return x\n      });\n      if (favoriteSearchedCryptoCurrencies.length > 0) {\n        let x = favoriteSearchedCryptoCurrencies.filter((currency: any) => {\n          return currency.name !== record.name\n        });\n        setSearchedFavoriteCryptoCurrencies(x);\n      }\n    }\n  }\n\n  const sendingRequest = async () => {\n\n    const [error, currenciesData] = await getAllCoins();\n    if (currenciesData && currenciesData.length > 0) {\n      setCryptoCurrencies(x => currenciesData);\n      setCountOfCryptoCurrencies(x => currenciesData.length);\n\n      const sumOf = (prop: string, array: []) => {\n        return currenciesData.reduce((accumulator: number, array: any) => {\n          return accumulator + Number(array[prop]);\n        }, 0)\n      }\n      setSumOfMarketCap(sumOf(\"market_cap\", currenciesData));\n      setSumOf24hVol(sumOf(\"total_volume\", currenciesData));\n\n      return\n    }\n    //notification.error()\n  }\n\n  useEffect(() => {\n    setInterval(() => {\n      sendingRequest();\n    }, 10000);\n\n  }, []);\n\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/chart\" exact>\n            <ViewChart />\n          </Route>\n          <Route path=\"/\" >\n            <Header\n              countOfCryptoCurrencies={countOfCryptoCurrencies}\n              sumOfMarketCap={sumOfMarketCap}\n              sumOf24hVol={sumOf24hVol}\n            />\n            <CryptoCurrenciesTable\n              title={t(\"Favorite Crypto Currecies Menu\")}\n              cryptoCurrencies={favoriteSearchedCryptoCurrencies.length > 0 ? favoriteSearchedCryptoCurrencies : favoriteCryptoCurrencies}\n              searchMethod={searchingForFavoriteCryptoCurrencies}\n              switch={switching}\n              kind=\"favorite\"\n              className=\"font-size-15 background-color-gray padding-10 margin-20 box-shadow\"\n            />\n            <CryptoCurrenciesTable\n              title={t(\"Crypto Currecies Menu\")}\n              cryptoCurrencies={searchedCryptoCurrencies.length > 0 ? searchedCryptoCurrencies : cryptoCurrencies}\n              searchMethod={searchingForNormalCryptoCurrencies}\n              switch={switching}\n              kind=\"normal\"\n              className=\"font-size-15 background-color-gray padding-10 margin-left-20 margin-right-20 box-shadow\"\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { CryptoActions, CryptoCurrencuEnum, ICrypto } from \"./actions.ts/actions\";\r\n\r\n\r\nexport const initialState: ICrypto = {\r\n    id: \"\",\r\n    symbol: \"\",\r\n    name: \"\",\r\n    image: \"\",\r\n    current_price: 0,\r\n    market_cap: 0,\r\n    market_cap_rank: 0,\r\n    fully_diluted_valuation: 0,\r\n    total_volume: 0,\r\n    high_24h: 0,\r\n    low_24h: 0,\r\n    price_change_24h: 0,\r\n    price_change_percentage_24h: 0,\r\n    market_cap_change_24h: 0,\r\n    market_cap_change_percentage_24h: 0,\r\n    circulating_supply: 0,\r\n    total_supply: 0,\r\n    max_supply: 0,\r\n    ath: 0,\r\n    ath_change_percentage: 0,\r\n    ath_date: \"\",\r\n    atl: 0,\r\n    atl_change_percentage: 0,\r\n    atl_date: \"\",\r\n    last_updated: \"\"\r\n}\r\n\r\nexport const state = (state: ICrypto = initialState, action: CryptoActions): ICrypto => {\r\n    switch (action.type) {\r\n        case CryptoCurrencuEnum.ADD_CRYPTOCURRENCY:\r\n            return {\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport englishlanguage from './en/translation.json'\r\nimport frenshlanguage from './fr/translation.json'\r\ni18n\r\n    .use(initReactI18next)\r\n    .init({\r\n        debug: true,\r\n        fallbackLng: 'en',\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n        resources: {\r\n            en: {\r\n                translation: englishlanguage\r\n            },\r\n            fr: {\r\n                translation: frenshlanguage\r\n            },\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './App.css';\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { state } from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport './public/i18next';\n\nconst store = createStore(state);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}